Dropin Warmups at RC Fall 1 2016

18 Aug. Plusone

24 Aug. Swap and rank
Swap: Write a function that takes two lists. L1 contains arbitrary data, L2 contains pairs of numbers. For each pair in L2, swap the corresponding elements in L1 and return the result at the end. For instance -
swap(['a', 'b', 'c'], [(0,2), [1,2)]) = ['c', 'a', 'b']

Rank: Write a function that takes a file name and a character and print the lines in the file ordered by the number of times the character appears in each line.
rank('Foo.txt', 'e')
Input:
Hey,
Hello world!
How's everyone doing?

Output:
How's everyone doing?
Hey,
Hello world!

31 Aug. FizzBuzz
Variations of FizzBuzz. I tried recursive and template meta-programming version.

1 Sep. Intersperse
Write a function that takes a list of lists and intersperses their elements, e.g.

intersperse([[1,2,3], [4,5,6], [7,8,9]]) => [1,4,7,2,5,8,3,6,9]

2 Sep. Straight
Write a function that takes a list of numbers, and returns the longest consecutive sublist of strictly increasing or decreasing numbers.
straight([1, 3, 3, 5, 6, 4, 2, 1, 7])  -> [6, 4, 2, 1]

([1, 3, 3, 5, 6] is not strictly increasing, because of the repeated 3s)
If there are multiple increasing/decreasing sublists of the same length, return whichever one you like.
